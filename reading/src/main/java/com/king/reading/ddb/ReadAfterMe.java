// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.king.reading.ddb;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class ReadAfterMe {

	@TarsStructProperty(order = 0, isRequire = true)
	public java.util.List<Part> parts = null;
	@TarsStructProperty(order = 1, isRequire = true)
	public int completedMission = 0;
	@TarsStructProperty(order = 2, isRequire = true)
	public int totalStar = 0;
	@TarsStructProperty(order = 3, isRequire = true)
	public int todayStar = 0;
	@TarsStructProperty(order = 4, isRequire = true)
	public String appraise = "";

	public java.util.List<Part> getParts() {
		return parts;
	}

	public void setParts(java.util.List<Part> parts) {
		this.parts = parts;
	}

	public int getCompletedMission() {
		return completedMission;
	}

	public void setCompletedMission(int completedMission) {
		this.completedMission = completedMission;
	}

	public int getTotalStar() {
		return totalStar;
	}

	public void setTotalStar(int totalStar) {
		this.totalStar = totalStar;
	}

	public int getTodayStar() {
		return todayStar;
	}

	public void setTodayStar(int todayStar) {
		this.todayStar = todayStar;
	}

	public String getAppraise() {
		return appraise;
	}

	public void setAppraise(String appraise) {
		this.appraise = appraise;
	}

	public ReadAfterMe() {
	}

	public ReadAfterMe(java.util.List<Part> parts, int completedMission, int totalStar, int todayStar, String appraise) {
		this.parts = parts;
		this.completedMission = completedMission;
		this.totalStar = totalStar;
		this.todayStar = todayStar;
		this.appraise = appraise;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(parts);
		result = prime * result + TarsUtil.hashCode(completedMission);
		result = prime * result + TarsUtil.hashCode(totalStar);
		result = prime * result + TarsUtil.hashCode(todayStar);
		result = prime * result + TarsUtil.hashCode(appraise);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof ReadAfterMe)) {
			return false;
		}
		ReadAfterMe other = (ReadAfterMe) obj;
		return (
			TarsUtil.equals(parts, other.parts) &&
			TarsUtil.equals(completedMission, other.completedMission) &&
			TarsUtil.equals(totalStar, other.totalStar) &&
			TarsUtil.equals(todayStar, other.todayStar) &&
			TarsUtil.equals(appraise, other.appraise) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		_os.write(parts, 0);
		_os.write(completedMission, 1);
		_os.write(totalStar, 2);
		_os.write(todayStar, 3);
		_os.write(appraise, 4);
	}

	static java.util.List<Part> cache_parts;
	static { 
		cache_parts = new java.util.ArrayList<Part>();
		Part var_13 = new Part();
		cache_parts.add(var_13);
	}

	public void readFrom(TarsInputStream _is) {
		this.parts = (java.util.List<Part>) _is.read(cache_parts, 0, true);
		this.completedMission = _is.read(completedMission, 1, true);
		this.totalStar = _is.read(totalStar, 2, true);
		this.todayStar = _is.read(todayStar, 3, true);
		this.appraise = _is.readString(4, true);
	}

}

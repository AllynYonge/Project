// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.king.reading.ddb;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class GetPageResponse {

	@TarsStructProperty(order = 0, isRequire = true)
	public java.util.List<Page> pages = null;

	public java.util.List<Page> getPages() {
		return pages;
	}

	public void setPages(java.util.List<Page> pages) {
		this.pages = pages;
	}

	public GetPageResponse() {
	}

	public GetPageResponse(java.util.List<Page> pages) {
		this.pages = pages;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(pages);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof GetPageResponse)) {
			return false;
		}
		GetPageResponse other = (GetPageResponse) obj;
		return (
			TarsUtil.equals(pages, other.pages) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		_os.write(pages, 0);
	}

	static java.util.List<Page> cache_pages;
	static { 
		cache_pages = new java.util.ArrayList<Page>();
		Page var_23 = new Page();
		cache_pages.add(var_23);
	}

	public void readFrom(TarsInputStream _is) {
		this.pages = (java.util.List<Page>) _is.read(cache_pages, 0, true);
	}

}

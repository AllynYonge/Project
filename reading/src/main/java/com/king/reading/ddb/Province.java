// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.king.reading.ddb;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class Province {

	@TarsStructProperty(order = 0, isRequire = true)
	public String name = "";
	@TarsStructProperty(order = 1, isRequire = true)
	public java.util.List<City> cities = null;
	@TarsStructProperty(order = 2, isRequire = false)
	public int areaCode = 0;

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public java.util.List<City> getCities() {
		return cities;
	}

	public void setCities(java.util.List<City> cities) {
		this.cities = cities;
	}

	public int getAreaCode() {
		return areaCode;
	}

	public void setAreaCode(int areaCode) {
		this.areaCode = areaCode;
	}

	public Province() {
	}

	public Province(String name, java.util.List<City> cities, int areaCode) {
		this.name = name;
		this.cities = cities;
		this.areaCode = areaCode;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(name);
		result = prime * result + TarsUtil.hashCode(cities);
		result = prime * result + TarsUtil.hashCode(areaCode);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof Province)) {
			return false;
		}
		Province other = (Province) obj;
		return (
			TarsUtil.equals(name, other.name) &&
			TarsUtil.equals(cities, other.cities) &&
			TarsUtil.equals(areaCode, other.areaCode) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		_os.write(name, 0);
		_os.write(cities, 1);
		_os.write(areaCode, 2);
	}

	static java.util.List<City> cache_cities;
	static { 
		cache_cities = new java.util.ArrayList<City>();
		City var_17 = new City();
		cache_cities.add(var_17);
	}

	public void readFrom(TarsInputStream _is) {
		this.name = _is.readString(0, true);
		this.cities = (java.util.List<City>) _is.read(cache_cities, 1, true);
		this.areaCode = _is.read(areaCode, 2, false);
	}

}

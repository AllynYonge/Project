// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.king.reading.ddb;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class GetUnitWordsResponse {

	@TarsStructProperty(order = 0, isRequire = true)
	public java.util.List<Word> words = null;

	public java.util.List<Word> getWords() {
		return words;
	}

	public void setWords(java.util.List<Word> words) {
		this.words = words;
	}

	public GetUnitWordsResponse() {
	}

	public GetUnitWordsResponse(java.util.List<Word> words) {
		this.words = words;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(words);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof GetUnitWordsResponse)) {
			return false;
		}
		GetUnitWordsResponse other = (GetUnitWordsResponse) obj;
		return (
			TarsUtil.equals(words, other.words) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		_os.write(words, 0);
	}

	static java.util.List<Word> cache_words;
	static { 
		cache_words = new java.util.ArrayList<Word>();
		Word var_21 = new Word();
		cache_words.add(var_21);
	}

	public void readFrom(TarsInputStream _is) {
		this.words = (java.util.List<Word>) _is.read(cache_words, 0, true);
	}

}

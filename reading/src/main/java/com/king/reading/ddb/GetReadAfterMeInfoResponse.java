// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.king.reading.ddb;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class GetReadAfterMeInfoResponse {

	@TarsStructProperty(order = 0, isRequire = true)
	public ReadAfterMe readAfterMe = null;
	@TarsStructProperty(order = 1, isRequire = true)
	public SecKeyPair secKeyPair = null;

	public ReadAfterMe getReadAfterMe() {
		return readAfterMe;
	}

	public void setReadAfterMe(ReadAfterMe readAfterMe) {
		this.readAfterMe = readAfterMe;
	}

	public SecKeyPair getSecKeyPair() {
		return secKeyPair;
	}

	public void setSecKeyPair(SecKeyPair secKeyPair) {
		this.secKeyPair = secKeyPair;
	}

	public GetReadAfterMeInfoResponse() {
	}

	public GetReadAfterMeInfoResponse(ReadAfterMe readAfterMe, SecKeyPair secKeyPair) {
		this.readAfterMe = readAfterMe;
		this.secKeyPair = secKeyPair;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(readAfterMe);
		result = prime * result + TarsUtil.hashCode(secKeyPair);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof GetReadAfterMeInfoResponse)) {
			return false;
		}
		GetReadAfterMeInfoResponse other = (GetReadAfterMeInfoResponse) obj;
		return (
			TarsUtil.equals(readAfterMe, other.readAfterMe) &&
			TarsUtil.equals(secKeyPair, other.secKeyPair) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		_os.write(readAfterMe, 0);
		_os.write(secKeyPair, 1);
	}

	static ReadAfterMe cache_readAfterMe;
	static { 
		cache_readAfterMe = new ReadAfterMe();
	}
	static SecKeyPair cache_secKeyPair;
	static { 
		cache_secKeyPair = new SecKeyPair();
	}

	public void readFrom(TarsInputStream _is) {
		this.readAfterMe = (ReadAfterMe) _is.read(cache_readAfterMe, 0, true);
		this.secKeyPair = (SecKeyPair) _is.read(cache_secKeyPair, 1, true);
	}

}

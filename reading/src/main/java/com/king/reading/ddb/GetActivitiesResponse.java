// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.king.reading.ddb;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class GetActivitiesResponse {

	@TarsStructProperty(order = 0, isRequire = true)
	public java.util.List<Activity> activities = null;
	@TarsStructProperty(order = 1, isRequire = false)
	public PageContext pageContext = null;

	public java.util.List<Activity> getActivities() {
		return activities;
	}

	public void setActivities(java.util.List<Activity> activities) {
		this.activities = activities;
	}

	public PageContext getPageContext() {
		return pageContext;
	}

	public void setPageContext(PageContext pageContext) {
		this.pageContext = pageContext;
	}

	public GetActivitiesResponse() {
	}

	public GetActivitiesResponse(java.util.List<Activity> activities, PageContext pageContext) {
		this.activities = activities;
		this.pageContext = pageContext;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(activities);
		result = prime * result + TarsUtil.hashCode(pageContext);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof GetActivitiesResponse)) {
			return false;
		}
		GetActivitiesResponse other = (GetActivitiesResponse) obj;
		return (
			TarsUtil.equals(activities, other.activities) &&
			TarsUtil.equals(pageContext, other.pageContext) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		_os.write(activities, 0);
		if (null != pageContext) {
			_os.write(pageContext, 1);
		}
	}

	static java.util.List<Activity> cache_activities;
	static { 
		cache_activities = new java.util.ArrayList<Activity>();
		Activity var_27 = new Activity();
		cache_activities.add(var_27);
	}
	static PageContext cache_pageContext;
	static { 
		cache_pageContext = new PageContext();
	}

	public void readFrom(TarsInputStream _is) {
		this.activities = (java.util.List<Activity>) _is.read(cache_activities, 0, true);
		this.pageContext = (PageContext) _is.read(cache_pageContext, 1, false);
	}

}

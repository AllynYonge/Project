// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.king.reading.ddb;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class Product {

	@TarsStructProperty(order = 0, isRequire = true)
	public int productID = 0;
	@TarsStructProperty(order = 1, isRequire = true)
	public String name = "";
	@TarsStructProperty(order = 2, isRequire = true)
	public int price = 0;
	@TarsStructProperty(order = 3, isRequire = true)
	public int type = 0;

	public int getProductID() {
		return productID;
	}

	public void setProductID(int productID) {
		this.productID = productID;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public int getPrice() {
		return price;
	}

	public void setPrice(int price) {
		this.price = price;
	}

	public int getType() {
		return type;
	}

	public void setType(int type) {
		this.type = type;
	}

	public Product() {
	}

	public Product(int productID, String name, int price, int type) {
		this.productID = productID;
		this.name = name;
		this.price = price;
		this.type = type;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(productID);
		result = prime * result + TarsUtil.hashCode(name);
		result = prime * result + TarsUtil.hashCode(price);
		result = prime * result + TarsUtil.hashCode(type);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof Product)) {
			return false;
		}
		Product other = (Product) obj;
		return (
			TarsUtil.equals(productID, other.productID) &&
			TarsUtil.equals(name, other.name) &&
			TarsUtil.equals(price, other.price) &&
			TarsUtil.equals(type, other.type) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		_os.write(productID, 0);
		_os.write(name, 1);
		_os.write(price, 2);
		_os.write(type, 3);
	}


	public void readFrom(TarsInputStream _is) {
		this.productID = _is.read(productID, 0, true);
		this.name = _is.readString(1, true);
		this.price = _is.read(price, 2, true);
		this.type = _is.read(type, 3, true);
	}

}

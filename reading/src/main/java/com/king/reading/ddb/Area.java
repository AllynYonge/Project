// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.king.reading.ddb;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class Area {

	@TarsStructProperty(order = 0, isRequire = true)
	public String name = "";
	@TarsStructProperty(order = 1, isRequire = true)
	public java.util.List<BookBase> books = null;

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public java.util.List<BookBase> getBooks() {
		return books;
	}

	public void setBooks(java.util.List<BookBase> books) {
		this.books = books;
	}

	public Area() {
	}

	public Area(String name, java.util.List<BookBase> books) {
		this.name = name;
		this.books = books;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(name);
		result = prime * result + TarsUtil.hashCode(books);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof Area)) {
			return false;
		}
		Area other = (Area) obj;
		return (
			TarsUtil.equals(name, other.name) &&
			TarsUtil.equals(books, other.books) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		_os.write(name, 0);
		_os.write(books, 1);
	}

	static java.util.List<BookBase> cache_books;
	static { 
		cache_books = new java.util.ArrayList<BookBase>();
		BookBase var_4 = new BookBase();
		cache_books.add(var_4);
	}

	public void readFrom(TarsInputStream _is) {
		this.name = _is.readString(0, true);
		this.books = (java.util.List<BookBase>) _is.read(cache_books, 1, true);
	}

}

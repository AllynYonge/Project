// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.king.reading.ddb;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class CleanPushCountRequest {

	@TarsStructProperty(order = 0, isRequire = false)
	public String pushKey = "";

	public String getPushKey() {
		return pushKey;
	}

	public void setPushKey(String pushKey) {
		this.pushKey = pushKey;
	}

	public CleanPushCountRequest() {
	}

	public CleanPushCountRequest(String pushKey) {
		this.pushKey = pushKey;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(pushKey);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof CleanPushCountRequest)) {
			return false;
		}
		CleanPushCountRequest other = (CleanPushCountRequest) obj;
		return (
			TarsUtil.equals(pushKey, other.pushKey) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		if (null != pushKey) {
			_os.write(pushKey, 0);
		}
	}


	public void readFrom(TarsInputStream _is) {
		this.pushKey = _is.readString(0, false);
	}

}

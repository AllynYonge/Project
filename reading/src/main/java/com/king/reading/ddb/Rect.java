// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.king.reading.ddb;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class Rect {

	@TarsStructProperty(order = 0, isRequire = true)
	public Point origin = null;
	@TarsStructProperty(order = 1, isRequire = true)
	public Size size = null;

	public Point getOrigin() {
		return origin;
	}

	public void setOrigin(Point origin) {
		this.origin = origin;
	}

	public Size getSize() {
		return size;
	}

	public void setSize(Size size) {
		this.size = size;
	}

	public Rect() {
	}

	public Rect(Point origin, Size size) {
		this.origin = origin;
		this.size = size;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(origin);
		result = prime * result + TarsUtil.hashCode(size);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof Rect)) {
			return false;
		}
		Rect other = (Rect) obj;
		return (
			TarsUtil.equals(origin, other.origin) &&
			TarsUtil.equals(size, other.size) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		_os.write(origin, 0);
		_os.write(size, 1);
	}

	static Point cache_origin;
	static { 
		cache_origin = new Point();
	}
	static Size cache_size;
	static { 
		cache_size = new Size();
	}

	public void readFrom(TarsInputStream _is) {
		this.origin = (Point) _is.read(cache_origin, 0, true);
		this.size = (Size) _is.read(cache_size, 1, true);
	}

}

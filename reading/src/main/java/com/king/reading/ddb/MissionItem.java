// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.king.reading.ddb;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class MissionItem {

	@TarsStructProperty(order = 0, isRequire = true)
	public String imageURL = "";
	@TarsStructProperty(order = 1, isRequire = true)
	public String encryptSoundURL = "";
	@TarsStructProperty(order = 2, isRequire = true)
	public String word = "";

	public String getImageURL() {
		return imageURL;
	}

	public void setImageURL(String imageURL) {
		this.imageURL = imageURL;
	}

	public String getEncryptSoundURL() {
		return encryptSoundURL;
	}

	public void setEncryptSoundURL(String encryptSoundURL) {
		this.encryptSoundURL = encryptSoundURL;
	}

	public String getWord() {
		return word;
	}

	public void setWord(String word) {
		this.word = word;
	}

	public MissionItem() {
	}

	public MissionItem(String imageURL, String encryptSoundURL, String word) {
		this.imageURL = imageURL;
		this.encryptSoundURL = encryptSoundURL;
		this.word = word;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(imageURL);
		result = prime * result + TarsUtil.hashCode(encryptSoundURL);
		result = prime * result + TarsUtil.hashCode(word);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof MissionItem)) {
			return false;
		}
		MissionItem other = (MissionItem) obj;
		return (
			TarsUtil.equals(imageURL, other.imageURL) &&
			TarsUtil.equals(encryptSoundURL, other.encryptSoundURL) &&
			TarsUtil.equals(word, other.word) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		_os.write(imageURL, 0);
		_os.write(encryptSoundURL, 1);
		_os.write(word, 2);
	}


	public void readFrom(TarsInputStream _is) {
		this.imageURL = _is.readString(0, true);
		this.encryptSoundURL = _is.readString(1, true);
		this.word = _is.readString(2, true);
	}

}

// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.king.reading.ddb;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class Course {

	@TarsStructProperty(order = 0, isRequire = true)
	public long courseID = 0L;
	@TarsStructProperty(order = 1, isRequire = true)
	public String name = "";
	@TarsStructProperty(order = 2, isRequire = true)
	public String iconURL = "";
	@TarsStructProperty(order = 3, isRequire = true)
	public String url = "";

	public long getCourseID() {
		return courseID;
	}

	public void setCourseID(long courseID) {
		this.courseID = courseID;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getIconURL() {
		return iconURL;
	}

	public void setIconURL(String iconURL) {
		this.iconURL = iconURL;
	}

	public String getUrl() {
		return url;
	}

	public void setUrl(String url) {
		this.url = url;
	}

	public Course() {
	}

	public Course(long courseID, String name, String iconURL, String url) {
		this.courseID = courseID;
		this.name = name;
		this.iconURL = iconURL;
		this.url = url;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(courseID);
		result = prime * result + TarsUtil.hashCode(name);
		result = prime * result + TarsUtil.hashCode(iconURL);
		result = prime * result + TarsUtil.hashCode(url);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof Course)) {
			return false;
		}
		Course other = (Course) obj;
		return (
			TarsUtil.equals(courseID, other.courseID) &&
			TarsUtil.equals(name, other.name) &&
			TarsUtil.equals(iconURL, other.iconURL) &&
			TarsUtil.equals(url, other.url) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		_os.write(courseID, 0);
		_os.write(name, 1);
		_os.write(iconURL, 2);
		_os.write(url, 3);
	}


	public void readFrom(TarsInputStream _is) {
		this.courseID = _is.read(courseID, 0, true);
		this.name = _is.readString(1, true);
		this.iconURL = _is.readString(2, true);
		this.url = _is.readString(3, true);
	}

}

// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.king.reading.ddb;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class Purchase {

	@TarsStructProperty(order = 0, isRequire = true)
	public int vip = 0;
	@TarsStructProperty(order = 1, isRequire = true)
	public String start = "";
	@TarsStructProperty(order = 2, isRequire = true)
	public String end = "";
	@TarsStructProperty(order = 3, isRequire = true)
	public String desc = "";

	public int getVip() {
		return vip;
	}

	public void setVip(int vip) {
		this.vip = vip;
	}

	public String getStart() {
		return start;
	}

	public void setStart(String start) {
		this.start = start;
	}

	public String getEnd() {
		return end;
	}

	public void setEnd(String end) {
		this.end = end;
	}

	public String getDesc() {
		return desc;
	}

	public void setDesc(String desc) {
		this.desc = desc;
	}

	public Purchase() {
	}

	public Purchase(int vip, String start, String end, String desc) {
		this.vip = vip;
		this.start = start;
		this.end = end;
		this.desc = desc;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(vip);
		result = prime * result + TarsUtil.hashCode(start);
		result = prime * result + TarsUtil.hashCode(end);
		result = prime * result + TarsUtil.hashCode(desc);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof Purchase)) {
			return false;
		}
		Purchase other = (Purchase) obj;
		return (
			TarsUtil.equals(vip, other.vip) &&
			TarsUtil.equals(start, other.start) &&
			TarsUtil.equals(end, other.end) &&
			TarsUtil.equals(desc, other.desc) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		_os.write(vip, 0);
		_os.write(start, 1);
		_os.write(end, 2);
		_os.write(desc, 3);
	}


	public void readFrom(TarsInputStream _is) {
		this.vip = _is.read(vip, 0, true);
		this.start = _is.readString(1, true);
		this.end = _is.readString(2, true);
		this.desc = _is.readString(3, true);
	}

}

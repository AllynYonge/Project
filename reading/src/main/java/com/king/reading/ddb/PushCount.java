// **********************************************************************
// This file was generated by a TARS parser!
// TARS version 1.0.1.
// **********************************************************************

package com.king.reading.ddb;

import com.qq.tars.protocol.util.*;
import com.qq.tars.protocol.annotation.*;
import com.qq.tars.protocol.tars.*;
import com.qq.tars.protocol.tars.annotation.*;

@TarsStruct
public class PushCount {

	@TarsStructProperty(order = 0, isRequire = false)
	public String pushKey = "";
	@TarsStructProperty(order = 1, isRequire = false)
	public int type = 0;
	@TarsStructProperty(order = 2, isRequire = false)
	public java.util.Map<String, String> ext = null;

	public String getPushKey() {
		return pushKey;
	}

	public void setPushKey(String pushKey) {
		this.pushKey = pushKey;
	}

	public int getType() {
		return type;
	}

	public void setType(int type) {
		this.type = type;
	}

	public java.util.Map<String, String> getExt() {
		return ext;
	}

	public void setExt(java.util.Map<String, String> ext) {
		this.ext = ext;
	}

	public PushCount() {
	}

	public PushCount(String pushKey, int type, java.util.Map<String, String> ext) {
		this.pushKey = pushKey;
		this.type = type;
		this.ext = ext;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + TarsUtil.hashCode(pushKey);
		result = prime * result + TarsUtil.hashCode(type);
		result = prime * result + TarsUtil.hashCode(ext);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof PushCount)) {
			return false;
		}
		PushCount other = (PushCount) obj;
		return (
			TarsUtil.equals(pushKey, other.pushKey) &&
			TarsUtil.equals(type, other.type) &&
			TarsUtil.equals(ext, other.ext) 
		);
	}

	public void writeTo(TarsOutputStream _os) {
		if (null != pushKey) {
			_os.write(pushKey, 0);
		}
		_os.write(type, 1);
		if (null != ext) {
			_os.write(ext, 2);
		}
	}

	static java.util.Map<String, String> cache_ext;
	static { 
		cache_ext = new java.util.HashMap<String, String>();
		String var_14 = "";
		String var_15 = "";
		cache_ext.put(var_14 ,var_15);
	}

	public void readFrom(TarsInputStream _is) {
		this.pushKey = _is.readString(0, false);
		this.type = _is.read(type, 1, false);
		this.ext = (java.util.Map<String, String>) _is.read(cache_ext, 2, false);
	}

}
